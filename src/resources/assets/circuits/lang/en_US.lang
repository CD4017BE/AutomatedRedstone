#PARSE_ESCAPES
itemGroup.circuits=Automated Redstone
# Blocks
# names
tile.cd4017be.assembler.name=Circuit Assembler
tile.cd4017be.circuit\:0.name=Circuit Casing §7Basic
tile.cd4017be.circuit\:1.name=Circuit Casing §3Accelerated
tile.cd4017be.circuit\:2.name=Circuit Casing §9High Speed
tile.cd4017be.rsp_32bit.name=32-bit-Signal Wire
tile.cd4017be.rsp_basic\:0.name=Solid Redstone Wire
tile.cd4017be.rsp_basic\:1.name=Redstone Receiver Wire
tile.cd4017be.rsp_basic\:2.name=Redstone Emitter Wire
tile.cd4017be.bit_shifter.name=Signal Bit Shifter
tile.cd4017be.multilever.name=8-bit Lever
tile.cd4017be.potentiometer.name=Redstone Potentiometer
tile.cd4017be.display.name=Signal LED-Display
tile.cd4017be.sensor_reader.name=Sensor Reader
tile.cd4017be.oszillograph.name=Oscilloscope
tile.cd4017be.designer.name=Circuit Designer
tile.cd4017be.fluid_valve.name=Fluid Valve
tile.cd4017be.energy_valve.name=Energy Valve
tile.cd4017be.wireless_con\:0.name=Wireless Signal Connectors
tile.cd4017be.wireless_con\:1.name=§bLinked§f Wireless Signal Connector
tile.cd4017be.rsp_shift.name=Bit Splitter Wire
# tooltips
tile.cd4017be.designer.tip=Used to design the circuit architecture\nand write it on a §6Schematic§7 for Assembling.
tile.cd4017be.assembler.tip=Used to install components into a\n§6Circuit Casing§7 based on a §6Schematic§7.
tile.cd4017be.circuit\:0.tip=Compact container for complicated redstone logic.\nInstall Components in §6Circuit Assembler§7.\nMax \\<circuit_speed:0> cycles per second
tile.cd4017be.circuit\:1.tip=Max \\<circuit_speed:1> cycles per second
tile.cd4017be.circuit\:2.tip=Max \\<circuit_speed:2> cycles per second
tile.cd4017be.rsp_32bit.tip=Lossless instant omnidirectional\ntransfer of 32-bit redstone signals.\nClick on sides to change their IO mode.\nSneak-Click to disconnect Wires.\nClick with solid block to cover.
tile.cd4017be.rsp_basic\:0.tip=Lossless redstone signal transfer\nfrom §6Receiver§7 to §6Emitter§7 Wires\n(long distances will cause delay)\nSneak-Click to disconnect Wires\nClick with solid block to cover.
tile.cd4017be.rsp_basic\:1.tip=Emits a redstone signal.\nSupports 8-bit RS-strength (0-255).
tile.cd4017be.rsp_basic\:2.tip=Receives a redstone signal.\nSupports 8-bit RS-strength (0-255).
tile.cd4017be.bit_shifter.tip=Transforms signals between bit levels which is usefull\nfor transmitting multiple signals within one cable.\nClick sides to adjust §1input§7/§2output§7 bit offset.\nInsert §6IO bus Relay§7s to increase signal size (1bit/item).\nSneak-Click to remove installed §6IO bus Relay§7s.
tile.cd4017be.multilever.tip=Emits an adjustable redstone strength\nthat's represented by the 8 lever states in binary.
tile.cd4017be.potentiometer.tip=Emits an adjustable redstone strength.\nClick on slider to set its value.\nClick on +/- arrows to in/decrement\n(step size depends on click pos logarithmically)\nClick on non front side of the block to configure range.
tile.cd4017be.display.tip=A fancy way to display redstone signals.\nSupports 32-bit RS-strength (+/- 2.147.483.648).
tile.cd4017be.sensor_reader.tip=Outputs the measurement value of a\n§6Sensor§7 module as 32-bit RS-strength.
tile.cd4017be.oszillograph.tip=Displays the graph of up to 4 input values over time.\nInputs can be Redstone signals or §6Sensor§7 modules.\nLike in real Oscilloscopes the GUI has lots of settings.
tile.cd4017be.fluid_valve.tip=Can control or measure fluid flow with redstone signals.\n(counts in units of 1mB)
tile.cd4017be.energy_valve.tip=Can control or measure energy flow with redstone signals.\nSupports §3RF§7 and §3Tesla§7 (counts in unit of 1RF).
tile.cd4017be.wireless_con\:0.tip=Connects two §6Solid Redstone§7 or §632-bit-Signal Wires\nacross any distance and even between dimensions.\nYou'll get the second connector when placing this one.
tile.cd4017be.wireless_con\:1.tip=Place to establish a connection with linked block.\nWarning: At least one of both connectors must\nstay placed in world to keep up the linkage.\nSneak-Click block to remove both connectors at once\nand get them back as the unlinked connector.
tile.cd4017be.rsp_shift.tip=Used to transmit multiple signals over the same wire by splitting its bandwidth.\nSneak-Click to disconnect Wires & Normal-Click to open GUI.\n(§9OpenComputers§7 and §9TIS-3D§7 compatible)

tile.cd4017be.multilever.click0=Output as bits 0-7 [1-128]
tile.cd4017be.multilever.click1=Output as bits 8-15 [256-32768]
tile.cd4017be.multilever.click2=Output as bits 16-23 [65536-8388608]
tile.cd4017be.multilever.click3=Output as bits 24-31 [16777216-2147483648]
msg.cd4017be.wireless0=The dropped second Connector will link to this.
msg.cd4017be.wireless1=§2Found linked Connector in dim %d @ [%d, %d, %d]
msg.cd4017be.wireless2=§4No Connector could be found in dim %d @ [%d, %d, %d] !
msg.cd4017be.wireless3=Linked to [%d, %d, %d] in dim %d
msg.cd4017be.wireless4=§2Both linked connectors removed
msg.cd4017be.wireless5=§4Can't find other connector!

# Items
# names
item.cd4017be.m\:empty_sensor.name=Blank Sensor Module
item.cd4017be.m\:io_relay.name=IO bus Relay
item.cd4017be.m\:ram_plate.name=8-bit Memory Board
item.cd4017be.m\:logic_prc.name=Logic Processor
item.cd4017be.m\:calc_prc.name=Arithmetic Processor
item.cd4017be.circuit_plan.name=Circuit Schematic
item.cd4017be.item_sensor.name=Item Sensor §e(%.0f)
item.cd4017be.fluid_sensor.name=Fluid Sensor §e(%.0fmB)
item.cd4017be.energy_sensor.name=Energy Sensor §e(%.0fkJ)
item.cd4017be.time_sensor.name=Time Sensor Module
# tooltips
item.cd4017be.circuit_plan.tip=Contains the building instructions for a cicuit.\nAfter being written in the §6Circuit Designer§7\nit can be used in the §6Circuit Assembler§7.
item.cd4017be.item_sensor.tip=§6Sensor§7 module for counting items.\nUses block drops and items laying around\nif target block is not an inventory.\nRight-Click to configure filter.\nSneak-Click block to link (max \\<itemSensor_range>m range).
item.cd4017be.fluid_sensor.tip=§6Sensor§7 module for counting fluids.\nUses tank contents or fluids placed in world.\nRight-Click to configure filter.\nSneak-Click block to link (max \\<fluidSensor_range>m range).
item.cd4017be.energy_sensor.tip=§6Sensor§7 module for counting energy.\nSupports: §3kJ§7[x1], §3Tesla/RF§7[x0.1], §3EU§7[x0.4]\nSneak-Click block to link (max \\<energySensor_range>m range).
item.cd4017be.time_sensor.tip=§6Sensor§7 module for time measurement [s].\nCan use §3server-tick§7, §3ingame§7 or §3real-world§7 time.\nRight-Click to configure settings.\nSneak-Click block to link as signal source.

# GUI
gui.cd4017be.tickInt=%.2fs
# Inventory names
gui.cd4017be.assembler.name=Circuit Assembler
gui.cd4017be.circuit.name=Circuit
gui.cd4017be.display.name=Display
gui.cd4017be.sensor_reader.name=Sensor Reader
gui.cd4017be.item_sensor.name=Item Filter
gui.cd4017be.fluid_sensor.name=Fluid Filter
gui.cd4017be.time_sensor.name=Time Measurement
gui.cd4017be.oszillograph.name=Oszilloscope Settings
gui.cd4017be.designer.name=Circuit Design:
gui.cd4017be.potentiometer.name=Range:
gui.cd4017be.fluid_valve.name=Fluid Valve Control
gui.cd4017be.energy_valve.name=Energy Valve Control
gui.cd4017be.rsp_shift.name=Bit Shifters
# Gui tooltips
gui.cd4017be.itemSensor.neg=Invert filter?
gui.cd4017be.itemSensor.ore=Use Ore-Dictionary?
gui.cd4017be.itemSensor.nbt=Check NBT data?
gui.cd4017be.itemSensor.meta=Check damage/meta?
gui.cd4017be.itemSensor.tip=§4emptySlots,§4anything,§4not§7 , §2meta, §2NBT, §2ore
gui.cd4017be.fluid_sensor.tip=§4remaining space,§4anything,§4not§7 
gui.cd4017be.timeSensor.src0=Time source:\nServer Ticks
gui.cd4017be.timeSensor.src1=Time source:\nIngame Time
gui.cd4017be.timeSensor.src2=Time source:\nSystem Time
gui.cd4017be.timeSensor.ref=Starting date:
gui.cd4017be.timeSensor.int=Time interval:
gui.cd4017be.timeSensor.srcT0=Time based on server ticks.\nRecommended for timing tasks.
gui.cd4017be.timeSensor.srcT1=The ingame time, where day/night\ncycle and moon phases are bound to.
gui.cd4017be.timeSensor.srcT2=Real-world system time of the\nserver that is running minecraft.
gui.cd4017be.timeSensor.mode0=Emit time passed since starting date.
gui.cd4017be.timeSensor.mode1=Restart when time interval passed.
gui.cd4017be.timeSensor.mode2=Restart when linked Block emits redstone.
gui.cd4017be.timeSensor.mode3=Emit time between last two redstone signals.
gui.cd4017be.assembler.err-1=Empty
gui.cd4017be.assembler.msg-1=No §6Schematic§f -> disassembling circuits instead
gui.cd4017be.assembler.err0=§2Valid
gui.cd4017be.assembler.msg0=Schematic valid for assembling circuits
gui.cd4017be.assembler.err1=§4Invalid
gui.cd4017be.assembler.msg1=Some component inputs are not connected!
gui.cd4017be.assembler.err2=§4Invalid
gui.cd4017be.assembler.msg2=Schematic contains more than the maximum of 6 allowed IO channels!
gui.cd4017be.assembler.err3=§4Error
gui.cd4017be.assembler.msg3=Schematic contains invalid data!
gui.cd4017be.assembler.err4=§4Error
gui.cd4017be.assembler.msg4=Compiler crashed with java Exception (see log)!
gui.cd4017be.assembler.cmp0=§6IO bus Relay§fs for communication bandwith.
gui.cd4017be.assembler.cmp1=§6Memory Board§fs for storage capacity.
gui.cd4017be.assembler.cmp2=§6Logic Processor§fs for logic operations.
gui.cd4017be.assembler.cmp3=§6Arithmetic Processor§fs for nummeric operations.
gui.cd4017be.assembler.swap=Switch over to Designer GUI\n(if there's one nearby)
gui.cd4017be.assembler.info=How to make Circuits\nPart Recycling
gui.cd4017be.assembler.info0=§7First write your §6Circuit Schematic§7 using the §6Circuit Designer§7 and put it into the middle slot.\n§7Then put a §6Circuit Casing§7 into the upper right slot and supply the required material parts via the four slots on the left.\n§7When all progress bars are filled, the finished Circuit will appear in the bottom right slot.
gui.cd4017be.assembler.info1=§7Already assembled Circuit Casings can be reused. In this case only the parts that aren't already installed will be added and all existing parts that are not required will be extracted again.
gui.cd4017be.circuit.on0=Offline
gui.cd4017be.circuit.on1=Clock mode: updates\nevery tick interval
gui.cd4017be.circuit.on2=Interrupt mode: updates\nwhen input changes
gui.cd4017be.circuit.on3=Double interrupt mode:\nupdates twice
gui.cd4017be.circuit.reset=Sets all memory bits to off.
gui.cd4017be.circuit.tick=%.2fs
gui.cd4017be.circuit.timer=Tick interval
gui.cd4017be.circuit.dirI=Input %s
gui.cd4017be.circuit.dirO=Output %s
gui.cd4017be.circuit.ofsI=singal offset: %d bit\n(strength / %d)
gui.cd4017be.circuit.ofsO=singal offset: %d bit\n(strength * %d)
gui.cd4017be.circuit.ext=Signal bit offset
gui.cd4017be.circuit.size=Signal bandwidth in bits
gui.cd4017be.circuit.error=§4ERROR Invalid Code!
gui.cd4017be.circuit.info=Update modes\nSignal I/O\nState manipulation
gui.cd4017be.circuit.info0=§7The update modes define how the circuit logic is updated:\n§7Timer Mode is recommended when working with timed events. Whereas the interrupt modes are usefull when fast (50ms) reaction on input changes is required.\n§7Tick Interval then defines the delay or cooldown between updates. Better casings allow smaller intervals.
gui.cd4017be.circuit.info1=§7All Redstone I/O ports defined in the circuit are listed in the bottom right, where you can set which block face they should be bound to (multiple I/O ports can share the same block face).\n§7The sliders allow combining multiple signals in their binary representation and this way send them through a single cable without interference (see §6Bit Splitter Wire§7).
gui.cd4017be.circuit.info2=§7The grid below shows the current output states of all the components in the circuit (arranged like in Circuit Designer).\n§7Left-/right-click a cell to set it to the logic value active/inactive or scroll to increase/decrease its nummeric value by 1 (16 when holding SHIFT).\n§7Note that manual edits are uneffective on components that override their output state before it's read by others!
gui.cd4017be.potent.min=Minimum redstone value\n(any integer allowed)
gui.cd4017be.potent.max=Maximum redstone value\n(any integer allowed)
gui.cd4017be.display.text=Text rendered on display
gui.cd4017be.display.mode=Number type for converting\nsignal into digits.
gui.cd4017be.display.format=Display format:\n'0123456789ABCDEF.:-%' displayed as they are\n'#' displays next digit of signal\n'$' skips one digit without displaying\nN+'S' skips N digits (N = '1'...'9')\n'+' formats number signed and displays its sign\n'_' displays placeholder digit\nAnything else displays empty space.
gui.cd4017be.sensor.mult=Signal multiplier
gui.cd4017be.sensor.add=Signal offset
gui.cd4017be.sensor.timer=Measurement Interval
gui.cd4017be.sensor.tick=§1%.2fs
gui.cd4017be.sensor.out=Current output signal:\n§4%d
gui.cd4017be.sensor.info=Function
gui.cd4017be.sensor.info0=§7The §6Sensor§7 Module in the slot is read periodically based on the set time interval. The Redstone output strength is computed by first multiplying the measurement result by the signal multiplier and then adding the signal offset to it.
gui.cd4017be.valve.tick=§1%.2fs
gui.cd4017be.valve.timer=Time Interval (T) for\nmeasurement/transfer
gui.cd4017be.fluidvalve.mode0=Limit fluid flow
gui.cd4017be.fluidvalve.mode1=Measure fluid flow
gui.cd4017be.fluidvalve.flow=Current flow:\n§8%sB/§1T
gui.cd4017be.energyvalve.mode0=Limit energy flow
gui.cd4017be.energyvalve.mode1=Measure energy flow
gui.cd4017be.energyvalve.flow=Current flow:\n§8%sRF/§1T
gui.cd4017be.oszi.add=minimum Value\n(lower boundary of coord-grid)
gui.cd4017be.oszi.div=maximum Value\n(upper boundary of coord-grid)
gui.cd4017be.oszi.rsIn=The block face when using\nRedstone signals as channel input.
gui.cd4017be.oszi.on=Enable/Disable this signal channel.
gui.cd4017be.oszi.time=Time interval between recorded points.\n(Display width = 60 intervals)
gui.cd4017be.oszi.int=%.2fs
gui.cd4017be.oszi.label=Info label to draw on graph.
gui.cd4017be.oszi.trigger0=Automatic periodic trigger
gui.cd4017be.oszi.trigger1=Trigger by redstone signal
gui.cd4017be.oszi.trigger2=Trigger by §6Sensor§f value
gui.cd4017be.oszi.trigger3=Pause operation
gui.cd4017be.oszi.src=Trigger signal source:\nBlock face for redstone\nor channel for §6Sensor§f module.
gui.cd4017be.oszi.comp0=Trigger when signal above level
gui.cd4017be.oszi.comp1=Trigger when signal below level
gui.cd4017be.oszi.level=Signal compare level
gui.cd4017be.oszi.signed0=unsigned
gui.cd4017be.oszi.signed1=signed
gui.cd4017be.oszi.info=Channels\nDisplay\nTrigger
gui.cd4017be.oszi.info0=§7Each of the 4 channels displays one value. If there is a §6Sensor§7 module present in the slot then its measurement result will be displayed, otherwise it will use the Redstone strength received at the specified block face as input.\n§7The bit offset and bandwidth settings are only required when extracting a specific signal out of a cable that carries multiple signals combined in one.
gui.cd4017be.oszi.info1=§7The channels' input values are displayed as graph over time.\n§7The range of displayed values for each channel can be adjusted using the parameters on the right if needed to make it fit better on the screen. The displayed timescale can be adjusted as well by changing the interval at the bottom, where the display has a width of 60 time intervals.
gui.cd4017be.oszi.info2=§7The trigger defines when to start a new recording (simmilar to the start-button on a stopwatch).\n§7By default a new recording starts every time the end of the coordinate grid is reached. But it's also possible to use a Redstone signal or sensor measurement as trigger that activates as soon as the value exceeds or falls below a certain number.
gui.cd4017be.designer.cost=Cost: §4%s§7 L, §1%s§7 A
gui.cd4017be.designer.mod0=Constant\n§7Emits a fixed value that can be set via the Label text field.
gui.cd4017be.designer.mod1=Redstone Input\n§7Reads an incoming Redstone signal. The side configuration is later done in the §6Circuit Casing§7 UI, so it's recommended to name these in the Label text field when having more than one.
gui.cd4017be.designer.mod2=OR-gate\n§7Active if any input active.
gui.cd4017be.designer.mod3=NOR-gate\n§7Active if no input active.
gui.cd4017be.designer.mod4=AND-gate\n§7Active if all inputs active.
gui.cd4017be.designer.mod5=NAND-gate\n§7Active if any input inactive.
gui.cd4017be.designer.mod6=XOR-gate\n§7Active if odd number of inputs active.
gui.cd4017be.designer.mod7=XNOR-gate\n§7Active if even number of inputs active.
gui.cd4017be.designer.mod8=Buffer\n§7Emits the same value it gets as input. (used to delay signals when connected in reverse update order)
gui.cd4017be.designer.mod9=NOT-gate\n§7Active if input inactive.
gui.cd4017be.designer.mod10=Less\n§7Active if upper input value smaller that lower input value.
gui.cd4017be.designer.mod11=Greater equal\n§7Active if upper input value greater or equal to lower input value.
gui.cd4017be.designer.mod12=Equal\n§7Active if both input values are equal.
gui.cd4017be.designer.mod13=Not equal\n§7Active if both input values are different.
gui.cd4017be.designer.mod14=Negate\n§7Emits the input value with reversed sign.
gui.cd4017be.designer.mod15=Absolute value\n§7Emits the input value with positive sign.
gui.cd4017be.designer.mod16=Add\n§7Adds both input values together.
gui.cd4017be.designer.mod17=Subtract\n§7Subtracts the lower input value from the upper input value.
gui.cd4017be.designer.mod18=Multiply\n§7Multiplies both input values.
gui.cd4017be.designer.mod19=Divide\n§7Divides the upper input value by the lower input value (rounding up).
gui.cd4017be.designer.mod20=Modulo\n§7Emits the positive remainder of the upper divided by the lower input value.
gui.cd4017be.designer.mod21=Minimum\n§7Emits the smaller of the two input values.
gui.cd4017be.designer.mod22=Maximum\n§7Emits the greater of the two input values.
gui.cd4017be.designer.mod23=Switch\n§7If §4logic input§7 is active emits the lower else the upper §1input value§7.
gui.cd4017be.designer.mod24=Counter\n§7If upper input is active it increments its value by 1 each cycle and resets to 0 if lower input is active.
gui.cd4017be.designer.mod25=Advanced Counter\n§7If upper §4logic input§7 is active it increments its value by the upper §1input value§7 each cycle and resets to the lower §1input value§7 if lower §4logic input§7 is active.
gui.cd4017be.designer.mod26=Randomizer\n§7Emits a random value in range 0 to (input value)-1. (range -Iv+1 to 0 if Iv negative)
gui.cd4017be.designer.mod27=Square root\n§7Emits the square root of the input value rounded to whole numbers. (negates if Iv negative)
gui.cd4017be.designer.mod28=Bit right-shift\n§7Emits the §9upper input§7 value right-shifted in its binary representation by the §1lower input§7 value amount of bits.\n§7out = §9U§7 / 2^§1L§7
gui.cd4017be.designer.mod29=Bit left-shift\n§7Emits the §9upper input§7 value left-shifted in its binary representation by the §1lower input§7 value amount of bits.\n§7out = §9U§7 * 2^§1L§7
gui.cd4017be.designer.mod30=Bit combiner\n§7Emits a 8-bit value which binary representation is based on the 8 logic input signals.
gui.cd4017be.designer.mod31=Redstone Output\n§7Sets the value of an outgoing Redstone signal. The side configuration is later done in the §6Circuit Casing§7 UI, so it's recommended to name these in the Label text field when having more than one.
gui.cd4017be.designer.del=Delete sel Component\nShortcut:§aDELETE
gui.cd4017be.designer.out0=Settings of sel. Component
gui.cd4017be.designer.out1=8-bit Output\n(-128 to +127)
gui.cd4017be.designer.out2=16-bit Output\n(-32.768 to +32.767)
gui.cd4017be.designer.out3=24-bit Output\n(+/- 8.388.608)
gui.cd4017be.designer.out4=32-bit Output\n(+/- 2.147.483.648)
gui.cd4017be.designer.out5=1 Input
gui.cd4017be.designer.out6=2 Inputs
gui.cd4017be.designer.out7=3 Inputs
gui.cd4017be.designer.out8=4 Inputs\n(right-click to decrease)
gui.cd4017be.designer.out9=6 Inputs
gui.cd4017be.designer.out10=8 Inputs\n(right-click to decrease)
gui.cd4017be.designer.in0=Settings of sel. input
gui.cd4017be.designer.in1=8-bit Input
gui.cd4017be.designer.in2=16-bit Input
gui.cd4017be.designer.in3=24-bit Input
gui.cd4017be.designer.in4=32-bit Input
gui.cd4017be.designer.in5=1-bit Logic Input\n(0 is inactive, else is active)
gui.cd4017be.designer.in6=8-bit Logic Input\n(operation is performed for all bits separately)
gui.cd4017be.designer.in7=1-bit Logic Input\nusing state of bit 0
gui.cd4017be.designer.in8=1-bit Logic Input\nusing state of bit 1
gui.cd4017be.designer.in9=1-bit Logic Input\nusing state of bit 2
gui.cd4017be.designer.in10=1-bit Logic Input\nusing state of bit 3
gui.cd4017be.designer.in11=1-bit Logic Input\nusing state of bit 4
gui.cd4017be.designer.in12=1-bit Logic Input\nusing state of bit 5
gui.cd4017be.designer.in13=1-bit Logic Input\nusing state of bit 6
gui.cd4017be.designer.in14=1-bit Logic Input\nusing state of bit 7
gui.cd4017be.designer.label=Component Label\n(for better overview)
gui.cd4017be.designer.scroll=Shortcut:\n§aPRIOR§7/§aNEXT
gui.cd4017be.designer.wire0=Only show wiring of sel Comp.
gui.cd4017be.designer.wire1=Show all wirings\n(possibly messy)
gui.cd4017be.designer.Pname=Name your creation here
gui.cd4017be.designer.load=Load from Schematic Item\n+§aSHIFT§7: from local File
gui.cd4017be.designer.save=Save to Schematic Item\n+§aSHIFT§7: to local File
gui.cd4017be.designer.swap=Switch over to Assembler GUI\n(if there's one nearby)
gui.cd4017be.designer.loaded=Schematic successfully loaded!
gui.cd4017be.designer.saved=Schematic saved as: %s
gui.cd4017be.designer.notFound=Can't find schematic file: %s
gui.cd4017be.designer.noname=Schematic needs a name to be saved!
gui.cd4017be.designer.mods=<Outputs ^Parts
gui.cd4017be.designer.addOut=add Output\n
gui.cd4017be.designer.info=Basic Controls\nSimulation mechanics\nSignal types
gui.cd4017be.designer.info0=§7Click on Components in List on the right to add them to the circuitboard.\n§7Left-click a component on the circuitboard to select it for configuration.\n§7Hold Left-mouse to move it around.\n§7Use mouse-wheel to cycle through its input sockets.\n§7Right-click another component to connect the currently selected input socket with the output of that component.
gui.cd4017be.designer.info1=§7Each simulation cycle the output states of all the components are recalculated in the order top row to bottom row and left to right in every row.\n§7So if a component uses itself or a component that comes after it as input then it will receive the signal by 1 cycle delayed (it still sees the state of the previous cycle).
gui.cd4017be.designer.info2=§7The In- and Outputs of components can be either §4logic§7 (active/inactive) or §1nummeric§7 (numbers). The allowed range of §1nummeric§7 signals is determined by their bandwidth which is set to 8-bit (numbers in range -128 to +127) by default. Using the component settings on the right next to the inventory the bandwidth can be changed to 16-bit (-32768 to +32767), 24-bit (-8388608 to +8388607) or 32-bit (-2147483648 to +2147483648). The bigger the output-bandwidth of a component the more space it occupies on the circuitboard (indicated by bars next to it). Inputs and Outputs that are connected to each other should be set to the same bandwidth so the transmitted number doesn't get corrupted.\n§7If a §4logic§7 output is connected to a §1nummeric§7 8-bit input then §4inactive§7 is converted to §10§7 and §4active§7 is converted to §1-1§7. In the opposite case it depends on the setting of the logic input (see button tooltip).
gui.cd4017be.bit.size=Bandwidth
gui.cd4017be.bit.ofs=Offset: %.0f bit
gui.cd4017be.bit.out=Emitter
gui.cd4017be.bit.in=Receiver
gui.cd4017be.bit.int=§5Computer§f signal input
gui.cd4017be.bit.reset=Reset §5Computer§f signal
gui.cd4017be.bit.info=Concept\nConfiguration\n§5OpenComputers\n§5TIS-3D
gui.cd4017be.bit.info0=§7How to transmit 5 numbers in range 0-99 over a connection that only supports a single 10 digit number?\n§7Well, just make a 10 digit number whose first two digits are those of our first number, the next two digit are filled with out second number and so on ...\n§7This is actually how this device works but using binary bits instead of decimal digits.\n§7§oPlayers with more experience in binary numbers may also exploit this device for other uses.
gui.cd4017be.bit.info1=§7Using the text fields you can specify for each of the 6 block faces an input and output bandwidth (0 = not connected).\n§7You have a total of 32 bit available to freely distribute over all the individual signals you want to transfer. How many bits you should give each signal depends individually on the range of possible redstone strength values they could carry: n bits -> range 0 ... 2^n - 1\n§7Using the sliders you can then define where in the total bit pattern each value should be located (make sure they don't overlap to prevent interference). Of course also all entrance and exit points in your cable network that belong to the same signal must have the same bandwidth and bit offset setting for the transmission to work.
gui.cd4017be.bit.info2=§7With the mod OpenComputers installed this device works as component providing these functions:\n§9int §6read() §7returns the current full signal state of the internal wire.\n§9void §6write(§9int§6) §7sets the value of the computer input signal.\n§7(computer input signal only has an effect if at least one input bandwidth is non zero)
gui.cd4017be.bit.info3=§7With the mod TIS-3D installed this device can be connected to a serial port:\n§7Pushing values will set the signal that this device should receive from the serial port.\n§7Pulling values will read the signal that this device would emit into the serial port.\n§7§oKeep in mind that TIS-3D operates with only 16-bit and not 32.